{"version":3,"sources":["component/Input.js","actions/action.js","actions/actionTypes.js","container/TransactionTable.js","container/App.js","serviceWorker.js","reducers/reducer.js","index.js"],"names":["Input","_ref","title","name","placeholder","onBlur","react_default","a","createElement","type","edit","payload","EDIT_MIN_SUP","EDIT_MIN_CON","EDIT_NUM_TRANS","EDIT_TRANS_TABLE","TransactionTable","handleFocusOut","e","_e$target","target","value","transTable","_this","props","dispatch","numTrans","this","renderRows","n","_this2","_","range","map","i","k","key","Component","connect","state","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","items","freqItemSet","unFreqItemSet","handleInput","handleClick","itemSet","generateItemsFromInput","console","log","generateSets","concat","candidates","createCandidates","filterFreqItemSet","showResult","forEach","transaction","trim","split","item","find","push","sort","results","current","start","size","slice","length","sItems","isUnFreq","tItems","count","tItem","sItem","entries","obj","_obj","slicedToArray","_obj2","minSup","unFreqItem","len","resultLengthText","keys","resultText","result","resItem","setState","resultLength","component_Input","MIN_SUP","MIN_CON","NUM_TRANS","container_TransactionTable","onClick","minCon","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","arguments","undefined","action","objectSpread","store","createStore","reducer","ReactDOM","render","es","container_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ed3c661d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = ({ title, name, placeholder, onBlur }) => (\r\n  <div>\r\n    <div>{title}</div>\r\n    <input name={name} type='text' onBlur={onBlur} placeholder={placeholder} />\r\n  </div>\r\n)\r\n\r\nInput.propTypes = {\r\n  title: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  onBlur: PropTypes.func\r\n}\r\n\r\nexport default Input;\r\n","export function edit(type, payload) {\r\n    return {type, payload};\r\n}","export const EDIT_MIN_SUP = 'EDIT_MIN_SUP';\r\nexport const EDIT_MIN_CON = 'EDIT_MIN_CON';\r\nexport const EDIT_NUM_TRANS = 'EDIT_NUM_TRANS';\r\nexport const EDIT_TRANS_TABLE = 'EDIT_TRANS_TABLE';","import _ from 'lodash';\r\nimport React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { edit } from '../actions/action';\r\nimport {\r\n  EDIT_TRANS_TABLE\r\n} from '../actions/actionTypes';\r\n\r\nclass TransactionTable extends Component {\r\n\r\n    render() {\r\n        const { numTrans } = this.props;\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Transaction id</th>\r\n                        <th>item set</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows(numTrans)}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    renderRows(n) {\r\n        return _.range(n).map((i, k) => (\r\n            <tr key={k}>\r\n                <td>{(k + 1)}</td>\r\n                <td>\r\n                    <input name={k} type=\"text\" onBlur={this.handleFocusOut} />\r\n                </td>\r\n            </tr>\r\n        ));\r\n    }\r\n\r\n    handleFocusOut = (e) => {\r\n        const { name, value } = e.target;\r\n        let { transTable } = this.props;\r\n        transTable[name] = value;\r\n\r\n        this.props.dispatch(edit(EDIT_TRANS_TABLE, transTable));\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    numTrans: state.numTrans,\r\n    transTable: state.transTable\r\n});\r\n\r\nexport default connect(mapStateToProps)(TransactionTable);","import React, { Component } from \"react\";\nimport Input from '../component/Input';\nimport TransactionTable from './TransactionTable';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { edit } from '../actions/action';\nimport {\n  EDIT_MIN_CON,\n  EDIT_MIN_SUP,\n  EDIT_NUM_TRANS,\n} from '../actions/actionTypes';\n\nconst MIN_SUP = 20;\nconst MIN_CON = 20;\nconst NUM_TRANS = 5;\n\nclass App extends Component {\n\n  items = [];\n  freqItemSet = {};\n  unFreqItemSet = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      resultLength: '',\n      result: '',\n    };\n  }\n  render() {\n    return (\n      <div>\n        <h1>Apiori Algorithm Calculator</h1>\n        <Input name=\"minSup\" title=\"Minimum support\" onBlur={this.handleInput} placeholder={MIN_SUP + ''} />\n        <Input name=\"minCon\" title=\"Minimum confidence\" onBlur={this.handleInput} placeholder={MIN_CON + ''} />\n        <Input name=\"numTrans\" title=\"Number of transaction\" onBlur={this.handleInput} placeholder={NUM_TRANS + ''} />\n        <p>กรุณากรอกข้อมูลโดยเว้นวรรคระหว่างแต่ละ item เช่น A B C</p>\n        <TransactionTable/>\n        <button onClick={this.handleClick}>Calculate</button>\n        {this.state.resultLength && <p>{this.state.resultLength}</p>}\n        {this.state.result && <p>{this.state.result}</p>}\n      </div>\n    );\n  }\n\n  handleInput = (e) => {\n    let { name, value } = e.target;\n    value = (name === 'minSup' || name === 'minCon') ? value / 100 : value;\n    switch (name) {\n      case 'minSup': this.props.dispatch(edit(EDIT_MIN_SUP, value)); break;\n      case 'minCon': this.props.dispatch(edit(EDIT_MIN_CON, value)); break;\n      case 'numTrans': this.props.dispatch(edit(EDIT_NUM_TRANS, value)); break;\n      default: break;\n    }\n  }\n\n\n  handleClick = (e) => {\n    let itemSet = [];\n    this.freqItemSet = {};\n    this.unFreqItemSet = {};\n\n    this.generateItemsFromInput();\n    console.log('items : ', this.items);\n    for (let i = 1; i < this.props.numTrans; i++) {\n      this.generateSets(itemSet, '', this.items, 0, i);\n      console.log(`itemSet size = ${i} : `, itemSet);\n      const candidates = this.createCandidates(itemSet);\n      this.filterFreqItemSet(candidates);\n      //reset\n      itemSet = [];\n    }\n\n    console.log(this.freqItemSet);\n\n    this.showResult();\n  }\n\n  generateItemsFromInput = () => {\n    this.items = [];\n    this.props.transTable.forEach((transaction) => {\n      const transactionItems = transaction.trim().split(' ');\n      transactionItems.forEach((item) => {\n        const notExist = !this.items.find((i) => i+'' === item+'');\n        if (notExist) {\n          this.items.push(item);\n        }\n      });\n    });\n    this.items.sort();\n  }\n\n  generateSets = (results, current, items, start, size) => {\n    if (size === 0) {\n      return results.push(current.slice(0,-1));\n    }\n\n    for (let i = start; i <= items.length; i++) {\n      if (i < items.length) {\n        this.generateSets(results, current + items[i] + ',', items, i + 1, size - 1);\n      }\n    }\n  }\n\n  createCandidates = (itemSet) => {\n    const candidates = {};\n    itemSet.forEach((sItems) => {\n      //each item in itemset eg. ['AB'], ['BC']: item = ['AB']\n      if (!this.isUnFreq(sItems)) {\n        candidates[sItems] = 0;\n        this.props.transTable.forEach((transaction) => {\n          //each item in transactionTable eg. transaction = 'A B C D' => ['A1','B2','C3','D']\n          const tItems = transaction.trim().split(' ');\n          let count = 0;\n          tItems.forEach((tItem) => {\n            //tItem item in a transaction eg.: tItem = 'A1', 'A2', 'A3'\n            const sItem = sItems.split(',');\n            sItem.forEach((i) => {\n              if (tItem === i) {\n                count++;\n              }\n              if (count === sItem.length) {\n                candidates[sItems]++;\n                return;\n              }\n            });\n          });\n        });\n      }\n    });\n    Object.entries(candidates).forEach((obj) => {\n      const [key, value] = obj;\n      candidates[key] = value / this.props.numTrans;\n    });\n    return candidates;\n  }\n\n  filterFreqItemSet = (candidates) => {\n    Object.entries(candidates).forEach((obj) => {\n      const [key, value] = obj;\n      if (value >= this.props.minSup) {\n        this.freqItemSet[key] = value;\n      } else {\n        this.unFreqItemSet[key] = value;\n      }\n    });\n  }\n\n  isUnFreq = (item) => !!Object.entries(this.unFreqItemSet).find((unFreqItem) => unFreqItem === item)\n\n  showResult = () => {\n    const results = _.range(this.items.length).map(() => []);\n    Object.entries(this.freqItemSet).forEach(obj => {\n      const [key] = obj;\n      const len = key.split(',').length;\n      results[len].push(key);\n    });\n\n    let resultLengthText = `มี Frequence itemset ทั้งหมด ${Object.keys(this.freqItemSet).length} เซ็ต ได้แก่`\n    let resultText = '';\n\n    results.forEach((result) => {\n      result.forEach((resItem) => {\n        resultText += `{${resItem}} `;\n      });\n    });\n\n    this.setState({\n      resultLength: resultLengthText,\n      result: resultText\n    });\n\n  }\n}\n\nconst mapStateToProps = state => ({\n  numTrans: state.numTrans,\n  minSup: state.minSup,\n  minCon: state.minCon,\n  transTable: state.transTable\n})\n\nexport default connect(mapStateToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n    EDIT_MIN_CON,\r\n    EDIT_MIN_SUP,\r\n    EDIT_NUM_TRANS,\r\n    EDIT_TRANS_TABLE\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    minCon: 0.2,\r\n    minSup: 0.2,\r\n    numTrans: 5,\r\n    transTable: []\r\n};\r\n\r\nfunction edit(state = initialState, action) {\r\n    switch (action.type) {\r\n        case EDIT_MIN_CON:\r\n            return {\r\n                ...state,\r\n                minCon: action.payload\r\n            };\r\n        case EDIT_MIN_SUP:\r\n            return {\r\n                ...state,\r\n                minSup: action.payload\r\n            };\r\n        case EDIT_NUM_TRANS:\r\n            return {\r\n                ...state,\r\n                numTrans: action.payload\r\n            }\r\n        case EDIT_TRANS_TABLE:\r\n            return {\r\n                ...state,\r\n                transTable: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default edit;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './reducers/reducer';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}