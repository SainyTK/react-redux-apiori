{"version":3,"sources":["helpers/appHelper.js","redux/app/actions.js","component/RulesTable.js","component/ItemsTable.js","container/TransactionTable.js","component/Input.js","algorithm/apriori.js","container/App.js","serviceWorker.js","redux/app/reducer.js","redux/reducers.js","redux/store.js","index.js"],"names":["appHelper","toArrayTable","strTable","arrTable","forEach","row","push","trim","split","actions","SET_MIN_CON","SET_MIN_SUP","SET_NUM_TRANS","SET_TRANS_TABLE","SET_RULES","SET_FREQ_ITEMS","setMinCon","minCon","dispatch","type","payload","setMinSup","minSup","setNumTrans","numTrans","setTransTable","transTable","transTableArr","helpers","setFreqItems","freqItems","setRules","rules","WrappedTable","styled","div","_templateObject","RulesTable","props","react_default","a","createElement","length","className","scope","map","rule","idx","key","concat","lhs","rhs","confidence","ItemsTable_templateObject","ItemsTable","items","ItemsTable_WrappedTable","item","itemSet","join","support","TransactionTable","state","transTableString","handleFocusOut","e","_e$target","target","name","value","_this","this","renderRows","n","_this2","_","range","i","k","onBlur","Component","connect","App","Actions","Input","_ref","title","placeholder","AnalysisResult","frequentItemSets","associationRules","Object","classCallCheck","FrequentItemSet","AssociationRule","Algorithm","minSupport","minConfidence","debugMode","createClass","transactions","self","beforeMillis","Date","getTime","frequencies","oneElementItemSets","toOneElementItemSets","currentLItemSets","findItemSetsMinSupportSatisfied","itemSetSize","console","log","extractItemSet","f","joinedSets","ArrayUtils","toFixedSizeJoinedSets","calculateSupport","frequency","toString","foundSubSets","currentItemSet","saveAssociationRuleIfFound","subsetItemSet","diffItemSet","getDiffArray","isNaN","found","subset","isTheRuleAlreadyFound","saveAllAssociationRulesIfFound","toAllSubSets","itemSets","analysisResult","JSON","stringify","nestedArrayOfItem","transaction","Array","toArraySet","filteredItemSets","localFrequencies","isSubSetArrayOf","alreadyAdded","setAsAlreadyAddedIfFound","strItemSet","sort","filename","require","readFile","err","data","readCSVToArray","analyze","initial","array","uniqueArray","indexOf","arrayOfArray","foundElements","hasOwnProperty","op","sourceArray","currentArray","allSubSets","toStringSet","j","slice","joinedSetArray","itemSetA","itemSetB","mergedArray","joinedSet","targetArray","superSetArray","isSubSetArray","arrayA","arrayB","diffArray","renderRules","values","r","component_RulesTable","renderFreqItems","freqItem","component_ItemsTable","handleInput","handleClick","_this$props","_aprioriAlgorithm$ana","component_Input","MIN_SUP","MIN_CON","NUM_TRANS","container_TransactionTable","style","marginBottom","onClick","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","combineReducers","arguments","undefined","action","objectSpread","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","store","container_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.db7ea374.chunk.js","sourcesContent":["function toArrayTable(strTable) {\r\n    const arrTable = [];\r\n    strTable.forEach(row => {\r\n        arrTable.push(row.trim().split(' '));\r\n    });\r\n    return arrTable;\r\n}\r\n\r\n\r\nexport default {\r\n    toArrayTable\r\n}","import helpers from '../../helpers/appHelper';\r\n\r\nconst actions = {\r\n    SET_MIN_CON: 'SET_MIN_CON',\r\n    SET_MIN_SUP: 'SET_MIN_SUP',\r\n    SET_NUM_TRANS: 'SET_NUM_TRANS',\r\n    SET_TRANS_TABLE: 'SET_TRANS_TABLE',\r\n    SET_RULES: 'SET_RULES',\r\n    SET_FREQ_ITEMS: 'SET_FREQ_ITEMS',\r\n    setMinCon: (minCon) => (dispatch) => {\r\n        dispatch({ type: actions.SET_MIN_CON, payload: minCon });\r\n    },\r\n    setMinSup: (minSup) => (dispatch) => {\r\n        dispatch({ type: actions.SET_MIN_SUP, payload: minSup });\r\n    },\r\n    setNumTrans: (numTrans) => (dispatch) => {\r\n        dispatch({ type: actions.SET_NUM_TRANS, payload: numTrans });\r\n    },\r\n    setTransTable: (transTable) => (dispatch) => {\r\n        const transTableArr = helpers.toArrayTable(transTable);\r\n        dispatch({ type: actions.SET_TRANS_TABLE, payload: { transTable: transTableArr } });\r\n    },\r\n    setFreqItems: (freqItems) => (dispatch) => {\r\n        dispatch({ type: actions.SET_FREQ_ITEMS, payload: { freqItems } })\r\n    },\r\n    setRules: (rules) => (dispatch) => {\r\n        dispatch({ type: actions.SET_RULES, payload: { rules } })\r\n    }\r\n};\r\n\r\nexport default actions;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst WrappedTable = styled.div`\r\n    margin: 0px 10px;\r\n    width: 80%;\r\n    text-size: 11px;\r\n`\r\n\r\nconst RulesTable = props => {\r\n    const { rules } = props;\r\n    return (\r\n        <WrappedTable>\r\n            <h5>Strong Association Rules</h5>\r\n            <p>There are {rules.length} rules</p>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope='row'>#</th>\r\n                        <th scope='row'>rules</th>\r\n                        <th scope='row'>confidents</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rules.map((rule, idx) => (\r\n                        <tr key={idx}>\r\n                            <th scope='col'>{idx + 1}</th>\r\n                            <td>{`${rule.lhs} -> ${rule.rhs}`}</td>\r\n                            <td>{rule.confidence * 100}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </WrappedTable>\r\n    )\r\n}\r\n\r\nexport default RulesTable;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst WrappedTable = styled.div`\r\n    margin: 0px 10px;\r\n    width: 80%;\r\n    text-size: 11px;\r\n`\r\n\r\nconst ItemsTable = props => {\r\n    const { items } = props;\r\n    return (\r\n        <WrappedTable>\r\n            <h4>Frequence Itemsets</h4>\r\n            <p>There are {items.length} frequence itemsets</p>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope='row'>#</th>\r\n                        <th scope='row'>Items</th>\r\n                        <th scope='row'>Support</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {items.map((item, idx) => (\r\n                        <tr key={idx}>\r\n                            <th scope='col'>{idx + 1}</th>\r\n                            <td>{`${item.itemSet.join(', ')}`}</td>\r\n                            <td>{item.support * 100}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </WrappedTable>\r\n    )\r\n}\r\n\r\nexport default ItemsTable;","import _ from 'lodash';\r\nimport React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../redux/app/actions';\r\n\r\nclass TransactionTable extends Component {\r\n\r\n    state = {\r\n        transTableString:[]\r\n    }\r\n\r\n    render() {\r\n        const { numTrans } = this.props;\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Transaction id</th>\r\n                        <th>item set</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows(numTrans)}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    renderRows(n) {\r\n        return _.range(n).map((i, k) => (\r\n            <tr key={k}>\r\n                <td>{(k + 1)}</td>\r\n                <td>\r\n                    <input name={k} type=\"text\" onBlur={this.handleFocusOut} />\r\n                </td>\r\n            </tr>\r\n        ));\r\n    }\r\n\r\n    handleFocusOut = (e) => {\r\n        const { name, value } = e.target;\r\n        let { transTableString } = this.state;\r\n        transTableString[name] = value;\r\n\r\n        this.props.setTransTable(transTableString);\r\n    }\r\n}\r\n\r\nexport default connect(state => state.App, Actions)(TransactionTable);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = ({ title, name, placeholder, onBlur }) => (\r\n  <div>\r\n    <div>{title}</div>\r\n    <input name={name} type='text' onBlur={onBlur} placeholder={placeholder} />\r\n  </div>\r\n)\r\n\r\nInput.propTypes = {\r\n  title: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  onBlur: PropTypes.func\r\n}\r\n\r\nexport default Input;\r\n","export class AnalysisResult {\r\n    frequentItemSets;\r\n    associationRules;\r\n\r\n    constructor(frequentItemSets, associationRules) {\r\n        this.frequentItemSets = frequentItemSets;\r\n        this.associationRules = associationRules;\r\n    }\r\n}\r\n\r\nexport class FrequentItemSet {\r\n    itemSet;\r\n    support;\r\n\r\n    constructor(itemSet, support) {\r\n        this.itemSet = itemSet;\r\n        this.support = support;\r\n    }\r\n}\r\n\r\nexport class AssociationRule {\r\n    lhs;\r\n    rhs;\r\n    confidence;\r\n\r\n    constructor(lhs, rhs, confidence) {\r\n        this.lhs = lhs;\r\n        this.rhs = rhs;\r\n        this.confidence = confidence;\r\n    }\r\n}\r\n\r\nexport class Algorithm {\r\n    minSupport;\r\n    minConfidence;\r\n    debugMode;\r\n\r\n    constructor(minSupport, minConfidence, debugMode) {\r\n        this.minSupport = minSupport ? minSupport === 0 ? 0 : minSupport : 0.15;\r\n        this.minConfidence = minConfidence ? minConfidence === 0 ? 0 : minConfidence : 0.6;\r\n        this.debugMode = debugMode || false;\r\n    }\r\n\r\n    analyze(transactions) {\r\n        var self = this;\r\n        var beforeMillis = new Date().getTime();\r\n\r\n        var frequencies = {};\r\n        var frequentItemSets = {};\r\n\r\n        var oneElementItemSets = self.toOneElementItemSets(transactions);\r\n        var oneCItemSets = self.findItemSetsMinSupportSatisfied(\r\n            oneElementItemSets, transactions, self.minSupport, frequencies);\r\n        var currentLItemSets = oneCItemSets;\r\n        var itemSetSize = 1;\r\n\r\n        if (self.debugMode) {\r\n            console.log('Before finding item sets: ' + self.getTime(beforeMillis) + ' ms');\r\n        }\r\n        var extractItemSet = (f) => { return f.itemSet };\r\n        while (currentLItemSets.length !== 0) {\r\n            frequentItemSets[itemSetSize] = currentLItemSets;\r\n            var joinedSets = ArrayUtils.toFixedSizeJoinedSets(currentLItemSets.map(extractItemSet), itemSetSize + 1);\r\n            currentLItemSets = self.findItemSetsMinSupportSatisfied(joinedSets, transactions, self.minSupport, frequencies);\r\n            itemSetSize += 1;\r\n        }\r\n        if (self.debugMode) {\r\n            console.log('After finding item sets: ' + self.getTime(beforeMillis) + ' ms');\r\n        }\r\n\r\n        // local function which returns the support of an item\r\n        var calculateSupport = (\r\n            itemSet,\r\n            frequencies,\r\n            transactions) => {\r\n            var frequency = frequencies[itemSet.toString()];\r\n            return frequency ? frequency / transactions.length : 0;\r\n        };\r\n        var foundSubSets = [];\r\n        var isTheRuleAlreadyFound = (itemSet) => {\r\n            var found = false;\r\n            foundSubSets.forEach((subset) => { if (!found) found = subset.toString() === itemSet.toString(); });\r\n            return found;\r\n        };\r\n\r\n        if (self.debugMode) {\r\n            console.log('Before calculating association rules: ' + self.getTime(beforeMillis) + ' ms');\r\n        }\r\n        var associationRules = [];\r\n        var currentItemSet;\r\n        var saveAssociationRuleIfFound = (subsetItemSet) => {\r\n            var diffItemSet = ArrayUtils.getDiffArray(currentItemSet, subsetItemSet);\r\n            if (diffItemSet.length > 0) {\r\n                var itemSupport = calculateSupport(currentItemSet, frequencies, transactions),\r\n                    subsetSupport = calculateSupport(subsetItemSet, frequencies, transactions),\r\n                    confidence = itemSupport / subsetSupport;\r\n\r\n                if (!isNaN(confidence) && !isTheRuleAlreadyFound(subsetItemSet) && confidence >= self.minConfidence) {\r\n                    foundSubSets.push(subsetItemSet);\r\n                    associationRules.push(new AssociationRule(subsetItemSet, diffItemSet, confidence));\r\n                }\r\n            }\r\n        };\r\n        var saveAllAssociationRulesIfFound = (itemSet) => {\r\n            currentItemSet = itemSet;\r\n            ArrayUtils.toAllSubSets(currentItemSet).forEach(saveAssociationRuleIfFound);\r\n        };\r\n        for (var k in frequentItemSets) {\r\n            var itemSets = frequentItemSets[k].map(extractItemSet);\r\n            if (itemSets.length === 0 || itemSets[0].length <= 1) {\r\n                continue;\r\n            }\r\n            itemSets.forEach(saveAllAssociationRulesIfFound)\r\n        }\r\n        if (self.debugMode) {\r\n            console.log('After calculating association rules: ' + self.getTime(beforeMillis) + ' ms');\r\n        }\r\n\r\n        var analysisResult = new AnalysisResult(frequentItemSets, associationRules);\r\n        if (self.debugMode) {\r\n            console.log('AnalysisResult: ' + JSON.stringify(analysisResult))\r\n            console.log('Apriori.Algorithm\\'s total spent time: ' + self.getTime(beforeMillis) + ' ms');\r\n        }\r\n        return analysisResult;\r\n    }\r\n\r\n    toOneElementItemSets(transactions) {\r\n        var nestedArrayOfItem = [];\r\n        transactions.forEach((transaction) => {\r\n            transaction.forEach((item) => { nestedArrayOfItem.push(new Array(item)); });\r\n        });\r\n        return ArrayUtils.toArraySet(nestedArrayOfItem);\r\n    }\r\n\r\n    findItemSetsMinSupportSatisfied(itemSets, transactions, minSupport, frequencies) {\r\n\r\n        var filteredItemSets = [],\r\n            localFrequencies = {};\r\n\r\n        itemSets.forEach((itemSet) => {\r\n            transactions.forEach((transaction) => {\r\n                if (ArrayUtils.isSubSetArrayOf(itemSet, transaction)) {\r\n                    if (!frequencies[itemSet.toString()]) frequencies[itemSet.toString()] = 0;\r\n                    if (!localFrequencies[itemSet.toString()]) localFrequencies[itemSet.toString()] = 0;\r\n                    frequencies[itemSet.toString()] += 1;\r\n                    localFrequencies[itemSet.toString()] += 1;\r\n                }\r\n            });\r\n        });\r\n        var alreadyAdded = false;\r\n        var setAsAlreadyAddedIfFound = (f) => {\r\n            if (!alreadyAdded) alreadyAdded = f.itemSet.toString() === itemSet.toString();\r\n        };\r\n        for (var strItemSet in localFrequencies) {\r\n            var itemSet = strItemSet.split(',').sort(),\r\n                localCount = localFrequencies[itemSet.toString()],\r\n                support = localCount / transactions.length;\r\n\r\n            if (support >= minSupport) {\r\n                alreadyAdded = false;\r\n                filteredItemSets.forEach(setAsAlreadyAddedIfFound);\r\n                if (!alreadyAdded) {\r\n                    filteredItemSets.push(new FrequentItemSet(itemSet, support));\r\n                }\r\n            }\r\n        }\r\n        return filteredItemSets;\r\n    }\r\n\r\n    // runs on the Node.js runtime\r\n    showAnalysisResultFromFile(filename) {\r\n        var self = this;\r\n        require('fs').readFile(filename, 'utf8', (err, data) => {\r\n            if (err) throw err;\r\n            var transactions = ArrayUtils.readCSVToArray(data, ',');\r\n            var analysisResult = self.analyze(transactions);\r\n            console.log(JSON.stringify(analysisResult.associationRules));\r\n        });\r\n    }\r\n\r\n    getTime(initial) {\r\n        return new Date().getTime() - initial;\r\n    }\r\n}\r\n\r\n// yes, reinvention of the wheel. Just for no dependency.\r\nexport class ArrayUtils {\r\n    static toStringSet(array) {\r\n        var uniqueArray = [];\r\n        array.forEach((e) => {\r\n            if (uniqueArray.indexOf(e) === -1) uniqueArray.push(e);\r\n        });\r\n        return uniqueArray;\r\n    }\r\n    static toArraySet(arrayOfArray) {\r\n        var foundElements = {},\r\n            uniqueArray = [];\r\n        arrayOfArray.forEach((array) => {\r\n            if (!foundElements.hasOwnProperty(array.toString())) {\r\n                uniqueArray.push(array);\r\n                foundElements[array.toString()] = true;\r\n            }\r\n        });\r\n        return uniqueArray;\r\n    }\r\n    static toAllSubSets(array) {\r\n        // refs: http://stackoverflow.com/questions/5752002/find-all-possible-subset-combos-in-an-array\r\n        var op = (n, sourceArray, currentArray, allSubSets) => {\r\n            if (n === 0) {\r\n                if (currentArray.length > 0) {\r\n                    allSubSets[allSubSets.length] = ArrayUtils.toStringSet(currentArray);\r\n                }\r\n            } else {\r\n                for (var j = 0; j < sourceArray.length; j++) {\r\n                    var nextN = n - 1,\r\n                        nextArray = sourceArray.slice(j + 1),\r\n                        updatedCurrentSubSet = currentArray.concat([sourceArray[j]]);\r\n                    op(nextN, nextArray, updatedCurrentSubSet, allSubSets);\r\n                }\r\n            }\r\n        }\r\n        var allSubSets = [];\r\n        array.sort();\r\n        for (var i = 1; i < array.length; i++) {\r\n            op(i, array, [], allSubSets);\r\n        }\r\n        allSubSets.push(array);\r\n        return ArrayUtils.toArraySet(allSubSets);\r\n    }\r\n    static toFixedSizeJoinedSets(itemSets, length) {\r\n        var joinedSetArray = [];\r\n        itemSets.forEach((itemSetA) => {\r\n            itemSets.forEach((itemSetB) => {\r\n                if (ArrayUtils.getDiffArray(itemSetA, itemSetB).length > 0) {\r\n                    var mergedArray = [].concat(itemSetA).concat(itemSetB),\r\n                        joinedSet = ArrayUtils.toStringSet(mergedArray);\r\n                    if (joinedSet.length === length) joinedSetArray.push(joinedSet);\r\n                }\r\n            });\r\n        });\r\n        return ArrayUtils.toArraySet(joinedSetArray);\r\n    }\r\n    static isSubSetArrayOf(targetArray, superSetArray) {\r\n        var isSubSetArray = true;\r\n        targetArray.forEach((item) => {\r\n            if (isSubSetArray && superSetArray.indexOf(item) === -1) isSubSetArray = false;\r\n        });\r\n        return isSubSetArray;\r\n    }\r\n    static getDiffArray(arrayA, arrayB) {\r\n        var diffArray = [];\r\n        arrayA.forEach((e) => { if (arrayB.indexOf(e) === -1) diffArray.push(e); });\r\n        return diffArray;\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport Actions from '../redux/app/actions';\nimport RulesTable from '../component/RulesTable';\nimport ItemsTable from '../component/ItemsTable';\nimport TransactionTable from './TransactionTable';\nimport Input from '../component/Input';\nimport { Algorithm } from '../algorithm/apriori';\n\nconst MIN_SUP = 20;\nconst MIN_CON = 20;\nconst NUM_TRANS = 5;\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className='container'>\n        <h1>Apiori Algorithm Calculator</h1>\n        <Input name=\"minSup\" title=\"Minimum support\" onBlur={this.handleInput} placeholder={MIN_SUP + ''} />\n        <Input name=\"minCon\" title=\"Minimum confidence\" onBlur={this.handleInput} placeholder={MIN_CON + ''} />\n        <Input name=\"numTrans\" title=\"Number of transaction\" onBlur={this.handleInput} placeholder={NUM_TRANS + ''} />\n        <p>กรุณากรอกข้อมูลโดยเว้นวรรคระหว่างแต่ละ item เช่น A B C</p>\n        <TransactionTable />\n        <button className='btn btn-primary' style={{marginBottom: '10px'}} onClick={this.handleClick}>Calculate</button>\n        {this.renderFreqItems()}\n        {this.renderRules()}\n      </div>\n    );\n  }\n\n  renderRules = () => {\n    const rules = [];\n    Object.values(this.props.rules).forEach(rule => {\n      rule.forEach((r) => {\n        rules.push(r);\n      })\n    });\n    if (rules.length > 0) {\n      return (\n        <div>\n          <RulesTable rules={rules}/>\n        </div>\n      )\n    }\n  }\n\n  renderFreqItems = () => {\n    const freqItems = [];\n    Object.values(this.props.freqItems).forEach(freqItem => {\n      freqItem.forEach((f) => {\n        freqItems.push(f);\n      })\n    });\n    if (freqItems.length > 0) {\n      return (\n        <div>\n          <ItemsTable items={freqItems}/>\n        </div>\n      )\n    }\n  }\n\n  handleInput = (e) => {\n    let { name, value } = e.target;\n    value = (name === 'minSup' || name === 'minCon') ? value / 100 : value;\n    switch (name) {\n      case 'minSup': this.props.setMinSup(value); break;\n      case 'minCon': this.props.setMinCon(value); break;\n      case 'numTrans': this.props.setNumTrans(value); break;\n      default: break;\n    }\n  }\n\n\n  handleClick = (e) => {\n    const { minSup, minCon, transTable } = this.props;\n\n    const aprioriAlgorithm = new Algorithm(minSup, minCon);\n    const {associationRules, frequentItemSets} = aprioriAlgorithm.analyze(transTable);\n\n    this.props.setFreqItems(frequentItemSets);\n    this.props.setRules(associationRules);\n\n  }\n\n}\n\nexport default connect(state => state.App, Actions)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import actions from './actions';\r\n\r\nconst initialState = {\r\n    minCon: 0.2,\r\n    minSup: 0.2,\r\n    numTrans: 5,\r\n    transTable: [],\r\n    freqItems: [],\r\n    rules: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case actions.SET_MIN_CON:\r\n            return {\r\n                ...state,\r\n                minCon: action.payload\r\n            };\r\n        case actions.SET_MIN_SUP:\r\n            return {\r\n                ...state,\r\n                minSup: action.payload\r\n            };\r\n        case actions.SET_NUM_TRANS:\r\n            return {\r\n                ...state,\r\n                numTrans: action.payload\r\n            }\r\n        case actions.SET_TRANS_TABLE:\r\n            return {\r\n                ...state,\r\n                transTable: action.payload.transTable,\r\n            }\r\n        case actions.SET_FREQ_ITEMS:\r\n            return {\r\n                ...state,\r\n                freqItems: action.payload.freqItems\r\n            }\r\n        case actions.SET_RULES:\r\n            return {\r\n                ...state,\r\n                rules: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport App from './app/reducer';\r\n\r\nexport default combineReducers({\r\n    App\r\n});","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers';\r\n\r\nexport default createStore(\r\n    reducers,\r\n    applyMiddleware(thunk)\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}